<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>io.extact</groupId>
		<artifactId>msa-rms-platform</artifactId>
		<version>0.0.1-SNAPSHOT</version>
		<relativePath>../pom.xml</relativePath>
	</parent>
	<artifactId>msa-rms-platform-fw</artifactId>
	<packaging>jar</packaging>
	<name>msa-rms-platform-fw</name>
	<description>framework of the application</description>

	<dependencies>
		<!-- ======================================== -->
		<!-- *** provided scope dependencies ***      -->
		<!-- ======================================== -->
		<!--
		modules that depend on code are provided scope, because this project works only for testing.
		provided scoped is included in the classpath at test.
		NOTE: Redefines scope on the user side
		-->
		<dependency>
			<groupId>io.extact</groupId>
			<artifactId>msa-rms-platform-core</artifactId>
		</dependency>
		<!-- dependent JakartaEE APIs -->
		<dependency>
			<groupId>jakarta.enterprise</groupId>
			<artifactId>jakarta.enterprise.cdi-api</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>jakarta.annotation</groupId>
			<artifactId>jakarta.annotation-api</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>jakarta.ws.rs</groupId>
			<artifactId>jakarta.ws.rs-api</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>jakarta.validation</groupId>
			<artifactId>jakarta.validation-api</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>jakarta.persistence</groupId>
			<artifactId>jakarta.persistence-api</artifactId>
			<scope>provided</scope>
		</dependency>

		<!-- dependent MicroProfile APIs -->
		<dependency>
			<groupId>org.eclipse.microprofile.jwt</groupId>
			<artifactId>microprofile-jwt-auth-api</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.eclipse.microprofile.config</groupId>
			<artifactId>microprofile-config-api</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.eclipse.microprofile.openapi</groupId>
			<artifactId>microprofile-openapi-api</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.eclipse.microprofile.rest.client</groupId>
			<artifactId>microprofile-rest-client-api</artifactId>
			<scope>provided</scope>
		</dependency>
		<!-- for BootstrapWebApi -->
		<dependency>
			<groupId>io.helidon.microprofile.cdi</groupId>
			<artifactId>helidon-microprofile-cdi</artifactId>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-csv</artifactId>
			<scope>provided</scope>
		</dependency>

		<!-- ======================================== -->
		<!-- *** test scope dependencies(APIs) *** -->
		<!-- ======================================== -->
		<!-- for test libraries -->
		<dependency>
			<groupId>io.extact</groupId>
			<artifactId>msa-rms-test-lib</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>jakarta.transaction</groupId>
			<artifactId>jakarta.transaction-api</artifactId>
			<scope>test</scope>
		</dependency>

		<!-- below are the libraries needed only to run the tests. -->
		<dependency>
			<groupId>io.helidon.microprofile.server</groupId>
			<artifactId>helidon-microprofile-server</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>io.helidon.microprofile.health</groupId>
			<artifactId>helidon-microprofile-health</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>io.helidon.health</groupId>
			<artifactId>helidon-health-checks</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>io.helidon.microprofile.rest-client</groupId>
			<artifactId>helidon-microprofile-rest-client</artifactId>
			<scope>test</scope>
		</dependency>

		<!-- for JTA runtimes -->
		<dependency>
			<groupId>io.helidon.integrations.cdi</groupId>
			<artifactId>helidon-integrations-cdi-jta-weld</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>io.helidon.integrations.cdi</groupId>
			<artifactId>helidon-integrations-cdi-datasource-hikaricp</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>io.helidon.integrations.cdi</groupId>
			<artifactId>helidon-integrations-cdi-jpa</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>io.helidon.integrations.cdi</groupId>
			<artifactId>helidon-integrations-cdi-eclipselink</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.eclipse.persistence</groupId>
			<artifactId>org.eclipse.persistence.jpa</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<scope>test</scope>
		</dependency>

		<!--
		The jackson dependency was removed in the following issue,
		but the dependency was added provisionally because the alternative method is unknown.
		https://github.com/oracle/helidon/issues/1109
		-->
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-core</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.dataformat</groupId>
			<artifactId>jackson-dataformat-yaml</artifactId>
			<scope>test</scope>
		</dependency>

		<!-- for BeanValidation runtimes -->
		<dependency>
			<groupId>org.hibernate.validator</groupId>
			<artifactId>hibernate-validator</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.glassfish.jersey.ext</groupId>
			<artifactId>jersey-bean-validation</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.glassfish</groupId>
			<artifactId>jakarta.el</artifactId>
			<scope>test</scope>
		</dependency>

		<!-- for jax-rs ext runtime -->
		<!-- for binding to application/json. It won't work without this -->
		<dependency>
			<groupId>org.glassfish.jersey.media</groupId>
			<artifactId>jersey-media-json-binding</artifactId>
			<scope>test</scope>
		</dependency>

		<!-- for jwt auth runtime -->
		<dependency>
			<groupId>javax.security.enterprise</groupId>
			<artifactId>javax.security.enterprise-api</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.bitbucket.b_c</groupId>
			<artifactId>jose4j</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>
	<build>
		<plugins>
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
			</plugin>
		</plugins>
	</build>
</project>
